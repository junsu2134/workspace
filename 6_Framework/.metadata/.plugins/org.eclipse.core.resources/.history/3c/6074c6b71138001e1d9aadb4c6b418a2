package edu.kh.project.member.model.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import edu.kh.project.member.model.dao.MemberDAO;
import edu.kh.project.member.model.dto.Member;

@Service // Service Layer : 서비스를 담당하는 개층
		 // 비즈니스 로직을 작성한다.(데이터 가공, dao호출, 트랜잭션 제어)처리하는 클래스라 명시
		 // + (추가적으로) Bean 등록하는 어노테이션
public class MemberServiceImpl implements MemberService{

	// private MemberDAO dao = new MemberDAO(); : 이미 DAO에서 만든 것이 있기 때문에 또 작성하지 않는다.
	
	// @Autowired : 작성된 필드와
	// Bean으로 등록된 객체 중 타입이 일치하는 Bean을
	// 해당 필드에 자동 주입(Injection)하는 어노테이션
	// == DI(Dependency Injection, 의존성 주입)
	//	  -> 객체를 직접 만들지 않고 Spring이 만들걸 주입함(Spring에 의존)
	@Autowired
	private MemberDAO dao;
	
	@Autowired // bean으로 등록된 객체 중 타입이 일치하는 객체를 DI
	private BCryptPasswordEncoder bcrypt;
	
	@Override
	public Member login(Member inputMember) {
		
		// 암호화 추가 예정
		
		// dao 메소드 호출
		Member loginMember = dao.login(inputMember);
		
		
		return loginMember;
	}
}
